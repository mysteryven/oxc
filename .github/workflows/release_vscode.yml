name: Release VSCode

on:
    pull_request:
        types: [opened, synchronize]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            code-target: win32-x64

          - os: windows-latest
            target: aarch64-pc-windows-msvc
            code-target: win32-arm64

          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            code-target: linux-x64

          - os: ubuntu-20.04
            target: aarch64-unknown-linux-gnu
            code-target: linux-arm64

          - os: macos-latest
            target: x86_64-apple-darwin
            code-target: darwin-x64

          - os: macos-latest
            target: aarch64-apple-darwin
            code-target: darwin-arm64

    name: Package ${{ matrix.code-target }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        run: rustup target add ${{ matrix.target }}

      - name: Install arm64 toolchain
        if: matrix.code-target == 'linux-arm64'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Cache
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: release-${{ matrix.target }}

      - name: Build Binary
        # strip debug symbols from std, see https://github.com/johnthagen/min-sized-rust#remove-panic-string-formatting-with-panic_immediate_abort
        run: cargo build --release --target ${{ matrix.target }} -p oxc_vscode
        env:
          CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc

      # The binary is zipped to fix permission loss https://github.com/actions/upload-artifact#permission-loss
      - name: Archive Binary
        if: runner.os == 'Windows'
        shell: bash
        run: |
          BIN_NAME=oxc-${{ matrix.code-target }}
          mv target/${{ matrix.target }}/release/oxc_cli.exe $BIN_NAME.exe
          7z a $BIN_NAME.zip $BIN_NAME.exe

      # The binary is zipped to fix permission loss https://github.com/actions/upload-artifact#permission-loss
      - name: Archive Binary
        if: runner.os != 'Windows'
        run: |
          BIN_NAME=oxc-${{ matrix.code-target }}
          mv target/${{ matrix.target }}/release/oxc_cli $BIN_NAME
          tar czf $BIN_NAME.tar.gz $BIN_NAME

      - name: Upload Binary
        uses: actions/upload-artifact@v3
        with:
          if-no-files-found: error
          name: binaries
          path: |
            *.zip
            *.tar.gz

  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          registry-url: 'https://registry.npmjs.org'

      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          name: binaries

      - name: Unzip
        uses: montudor/action-zip@v1
        with:
          args: unzip -qq *.zip -d .

      - name: Untar
        run: ls *.tar.gz | xargs -n1 tar xzf

      - name: Ls
        run: ls

